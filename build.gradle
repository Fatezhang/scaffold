plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
    id "io.freefair.lombok" version "5.1.1"
    id "org.flywaydb.flyway" version "6.5.3"
}

project(":") {
    group = 'com.scaffold'
    version = '1.0.0'
    sourceCompatibility = '11'

    repositories {
        jcenter()
        mavenCentral()
    }

    pmd {
        toolVersion = '6.21.0'
        ruleSetFiles = files('config/pmd.xml')
        ruleSets = []
        consoleOutput = true
    }

    checkstyleMain {
        configFile = file('config/checkstyle.xml')
        maxWarnings = 0
        maxErrors = 0
    }

    checkstyleTest {
        configFile = file('config/checkstyle.xml')
        maxWarnings = 0
        maxErrors = 0
    }

    jacoco {
        toolVersion = "0.8.4"
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            html.enabled true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it,
                        exclude: [
                                'com/scaffold/BootApplication.class',
                                'com/scaffold/api/diagnosis/DatabaseHealthCheck.class',
                                'com/scaffold/api/IndexController'
                        ]
                )
            }))
        }
    }

    jacocoTestCoverageVerification {
        dependsOn 'jacocoTestReport'

        violationRules {
            rule {
                element = 'CLASS'
                limit {
                    minimum = 1.0
                }
                excludes = [
                        'com.scaffold.BootApplication',
                        'com.scaffold.api.diagnosis.DatabaseHealthCheck',
                        'com.scaffold.api.IndexController'
                ]
            }
        }
    }

    lombok {
        version = "1.18.10"
    }

    test {
        useJUnitPlatform()
        exclude "com/scaffold/integration/**"
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    flyway {
        url = "jdbc:postgresql://${project.findProperty("dbHost") ?: "localhost"}:5432/scaffold_db"
        user = 'scaffold_admin'
        password = 'password10'
    }

    task integrationTest(type: Test) {
        useJUnitPlatform()
        include "com/scaffold/integration/**"

        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        onOutput { descriptor, event ->
            logger.lifecycle(event.message)
        }
    }

    ext {
        NEWRELIC = 'com.newrelic.agent.java:newrelic-agent:5.8.0'
    }

    configurations {
        newrelic
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    ext {
        set('springCloudVersion', "Hoxton.SR1")
    }

    dependencies {
        implementation 'com.google.guava:guava:28.0-jre'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'mysql:mysql-connector-java:8.0.21'
        implementation 'org.flywaydb:flyway-core:5.+'
        implementation 'net.logstash.logback:logstash-logback-encoder:6.+'
        implementation 'commons-beanutils:commons-beanutils:1.9.4'
        implementation 'com.vladmihalcea:hibernate-types-52:2.8.0'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation "org.testcontainers:mysql:1.14.3"
        testImplementation 'io.rest-assured:json-schema-validator:4.2.0'
        testCompile 'com.github.tomakehurst:wiremock:2.25.1'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        compile "io.springfox:springfox-swagger2:3.0.0"

        newrelic(NEWRELIC)
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    bootRun {
        jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5005"]
    }

    task copyNewrelicAgent(type: Copy) {
        from configurations.newrelic
        into 'build/libs/'
        rename { String fileName ->
            "newrelic.jar"
        }
    }

    check {
        dependsOn 'integrationTest'
        dependsOn 'jacocoTestReport'
        dependsOn 'jacocoTestCoverageVerification'
        dependsOn 'pmdMain'
        dependsOn 'pmdTest'
    }

    processResources {
        dependsOn 'copyNewrelicAgent'
    }
}
