<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cms.scaffold.job.jobManager.dao.JobInfoMapper">
  <resultMap id="BaseResultMap" type="com.cms.scaffold.job.jobManager.domain.JobInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="job_description" jdbcType="VARCHAR" property="jobDescription" />
    <result column="start_withrun" jdbcType="SMALLINT" property="startWithrun" />
    <result column="job_status" jdbcType="SMALLINT" property="jobStatus" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="bean_class" jdbcType="VARCHAR" property="beanClass" />
    <result column="spring_id" jdbcType="VARCHAR" property="springId" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="param_json" jdbcType="VARCHAR" property="paramJson" />
    <result column="is_concurrent" jdbcType="SMALLINT" property="isConcurrent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="sql_columns">
    id,job_name,job_group,job_description,start_withrun,job_status,cron_expression,bean_class,spring_id,method_name,param_json,is_concurrent,create_time
  </sql>
  <sql id="sql_where">
    <where>
      <if test="null != advanceFilterStr and ''!= advanceFilterStr">
        ${advanceFilterStr}
      </if>
      <if test="null == advanceFilterStr or ''== advanceFilterStr">
          <if test="null != id and '' != id or 0 ==id">and id = #{id}</if>
          <if test="null != jobName and '' != jobName">and job_name = #{jobName}</if>
          <if test="null != jobGroup and '' != jobGroup">and job_group = #{jobGroup}</if>
          <if test="null != jobDescription and '' != jobDescription">and job_description = #{jobDescription}</if>
          <if test="null != startWithrun and '' != startWithrun">and start_withrun = #{startWithrun}</if>
          <if test="null != jobStatus and '' != jobStatus">and job_status = #{jobStatus}</if>
          <if test="null != cronExpression and '' != cronExpression">and cron_expression = #{cronExpression}</if>
          <if test="null != beanClass and '' != beanClass">and bean_class = #{beanClass}</if>
          <if test="null != springId and '' != springId">and spring_id = #{springId}</if>
          <if test="null != methodName and '' != methodName">and method_name = #{methodName}</if>
          <if test="null != paramJson and '' != paramJson">and param_json = #{paramJson}</if>
          <if test="null != isConcurrent and '' != isConcurrent">and is_concurrent = #{isConcurrent}</if>
          <if test="null != createTime and '' != createTime">and create_time = #{createTime}</if>
      </if>
	</where>
  </sql>
  <sql id="sql_map_where">
    <where>
	  <foreach collection="map.keys" item="k" separator="and">
 	      <if test="null != map[k]">
	          a.${k} = #{map[${k}]}
	      </if>
	  </foreach>
	</where>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info where id = #{id}
  </select>
  <select id="selectCacheById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info where id = #{id}
  </select>
  <select id="selectLockById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info where id = #{id} for update
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info <include refid="sql_where" />
  </select>
  <select id="findList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info <include refid="sql_where" />
  </select>
  <select id="selectMap" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from job_info <include refid="sql_map_where" />
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(1) from job_info <include refid="sql_where" />
  </select>
  <sql id="sql_insert_columns">
    insert into job_info
	 <trim prefix="(" suffix=")" suffixOverrides="," >
	  <if test="null != item.jobName"> job_name,</if>
	  <if test="null != item.jobGroup"> job_group,</if>
	  <if test="null != item.jobDescription"> job_description,</if>
	  <if test="null != item.startWithrun"> start_withrun,</if>
	  <if test="null != item.jobStatus"> job_status,</if>
	  <if test="null != item.cronExpression"> cron_expression,</if>
	  <if test="null != item.beanClass"> bean_class,</if>
	  <if test="null != item.springId"> spring_id,</if>
	  <if test="null != item.methodName"> method_name,</if>
	  <if test="null != item.paramJson"> param_json,</if>
	  <if test="null != item.isConcurrent"> is_concurrent,</if>
	  <if test="null != item.createTime"> create_time,</if>
	</trim>
  </sql>
  <sql id="sql_insert_values">
        <trim prefix="values (" suffix=")" suffixOverrides="," >
	  <if test="null != item.jobName"> #{item.jobName},</if>
	  <if test="null != item.jobGroup"> #{item.jobGroup},</if>
	  <if test="null != item.jobDescription"> #{item.jobDescription},</if>
	  <if test="null != item.startWithrun"> #{item.startWithrun},</if>
	  <if test="null != item.jobStatus"> #{item.jobStatus},</if>
	  <if test="null != item.cronExpression"> #{item.cronExpression},</if>
	  <if test="null != item.beanClass"> #{item.beanClass},</if>
	  <if test="null != item.springId"> #{item.springId},</if>
	  <if test="null != item.methodName"> #{item.methodName},</if>
	  <if test="null != item.paramJson"> #{item.paramJson},</if>
	  <if test="null != item.isConcurrent"> #{item.isConcurrent},</if>
	  <if test="null != item.createTime"> #{item.createTime},</if>
	</trim>
  </sql>
  <insert id="insert" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_insert_columns" /><include refid="sql_insert_values" />
  </insert>
  <insert id="batchInsert">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_insert_columns" /><include refid="sql_insert_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update job_info set id = #{item.id}
      <if test="null != item.jobName">, job_name = #{item.jobName}</if>
      <if test="null != item.jobGroup">, job_group = #{item.jobGroup}</if>
      <if test="null != item.jobDescription">, job_description = #{item.jobDescription}</if>
      <if test="null != item.startWithrun">, start_withrun = #{item.startWithrun}</if>
      <if test="null != item.jobStatus">, job_status = #{item.jobStatus}</if>
      <if test="null != item.cronExpression">, cron_expression = #{item.cronExpression}</if>
      <if test="null != item.beanClass">, bean_class = #{item.beanClass}</if>
      <if test="null != item.springId">, spring_id = #{item.springId}</if>
      <if test="null != item.methodName">, method_name = #{item.methodName}</if>
      <if test="null != item.paramJson">, param_json = #{item.paramJson}</if>
      <if test="null != item.isConcurrent">, is_concurrent = #{item.isConcurrent}</if>
      <if test="null != item.createTime">, create_time = #{item.createTime}</if>
	where id = #{item.id}
  </sql>
  <sql id="sql_update_all">
    update job_info set id = #{item.id}
	  , job_name = #{item.jobName}
	  , job_group = #{item.jobGroup}
	  , job_description = #{item.jobDescription}
	  , start_withrun = #{item.startWithrun}
	  , job_status = #{item.jobStatus}
	  , cron_expression = #{item.cronExpression}
	  , bean_class = #{item.beanClass}
	  , spring_id = #{item.springId}
	  , method_name = #{item.methodName}
	  , param_json = #{item.paramJson}
	  , is_concurrent = #{item.isConcurrent}
	  , create_time = #{item.createTime}
	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <update id="updateAll">
    <include refid="sql_update_all" />
  </update>
  <delete id="delArray">
    delete from job_info where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from job_info where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>